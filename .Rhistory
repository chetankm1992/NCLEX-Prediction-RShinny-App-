data <- read.csv(file='D:/UMASSD/Nursing Department/data-analysis/data-selection-cleaning/data/NCLEX-selected-cleaned.csv', sep=",")
# Removing unncessory attributes
data$X <- NULL
# Factor variables
data$NCLEX.Outcome <- as.factor(data$NCLEX.Outcome)
# Partition data - train 70%, test 30%
set.seed(123)
ind <-sample(2,nrow(data), replace = T, prob = c(0.7, 0.3))
train <- data[ind ==1,]
test <- data[ind ==2,]
library(e1071)
tune.out <- tune(svm, NCLEX.Outcome~., data = newData, kernel="linear",
ranges = list(gamma=c(0.1,0.5,1,2,4),
cost = c(0.1,1,10,100,1000)
),
class.weights= c("passed" = 1, "failed" = 10))
model_svm <- svm(NCLEX.Outcome ~. , train, kernel = "linear", class.weights = c("passed" = 1, "failed" = 2.4), cost = 100, gamma = 0.1)
p1 <- predict(model_svm, train, type = "response")
tab1 <- table(predicted = p1, Actual = train$NCLEX.Outcome)
tab1
# Miss classification error - training data
(1 - sum(diag(tab1))/sum(tab1)) * 100
(sum(diag(tab1))/sum(tab1)) * 100
p1 <- predict(model_svm, test, type = "response")
# Confusion matrix - training data
tab1 <- table(predicted = p1, Actual = test$NCLEX.Outcome)
tab1
# Miss classification error - training data
(1 - sum(diag(tab1))/sum(tab1)) * 100
# Accuracy - training data
(sum(diag(tab1))/sum(tab1)) * 100
## Reading NCLEX data
data <- read.csv(file="D:/UMASSD/Nursing Department/data-analysis/data-selection-cleaning/data/NCLEX-selected-cleaned.csv", header = T)
# Removing unncessory attributes
data$X <- NULL
# Factor variables
data$NCLEX.Outcome <- as.factor(data$NCLEX.Outcome)
data$Admitted.Major <- NULL
# Partition data - train 70%, test 30%
set.seed(123)
ind <-sample(2,nrow(data), replace = T, prob = c(0.7, 0.3))
train <- data[ind ==1,]
test <- data[ind ==2,]
#linear Regression
lrmodal <- glm(NCLEX.Outcome ~ ., train, family = binomial)
# Confusion matrix - train data
p3 <- predict(lrmodal, train, type = 'response')
#head(p3)
p3 <- ifelse(p3 > 0.5, 1, 0)
(tab3 <- table(Predicted = p3, Actual = train$NCLEX.Outcome))
# Miss classification error
(1 - sum(diag(tab3))/sum(tab3)) * 100
#Accuracy
(sum(diag(tab3))/sum(tab3)) * 100
# Confusion matrix - test
p4 <- predict(lrmodal, test, type = 'response')
#head(p3)
p4 <- ifelse(p4 > 0.5, 1, 0)
(tab4 <- table(Predicted = p4, Actual = test$NCLEX.Outcome))
# Miss classification error
(1 - sum(diag(tab4))/sum(tab4)) * 100
#Accuracy
(sum(diag(tab4))/sum(tab4)) * 100
new.df <- data.frame(age=23, Gender="F", Ethnicity="White", HESI.Score=599,
Date=2016, NCLEX.Outcome = "failed", Admitted.Major="Nursing BS", Cum.GPA=3.239)
predict(model, newdata = new.df, interval="confidence", level=.95)
data <- read.csv(file = "D:/UMASSD/Nursing Department/data-analysis/data-selection-cleaning/data/NCLEX-selected-cleaned.csv" , header = T)
# Removing unncessory attributes
data$X <- NULL
#data$NCLEX.Outcome <- factor(data$NCLEX.Outcome)
modelglm <- glm(NCLEX.Outcome ~ ., data, family = binomial)
model <- glm(NCLEX.Outcome ~ Gender + HESI.Score + Cum.GPA, data, family = binomial)
new.df <- data.frame(age=23, Gender="F", Ethnicity="White", HESI.Score=599,
Date=2016, NCLEX.Outcome = "failed", Admitted.Major="Nursing BS", Cum.GPA=3.239)
predict(model, newdata = new.df, interval="confidence", level=.95)
predict(model, newdata = new.df)
new.df <- data.frame(age=23, Gender="F", Ethnicity="White", HESI.Score=499,
Date=2016, NCLEX.Outcome = "failed", Admitted.Major="Nursing BS", Cum.GPA=2.239)
predict(model, newdata = new.df)
p3 <- predict(modal, new.df, type = 'response')
p3 <- predict(model, new.df, type = 'response')
p3 <- ifelse(p3 > 0.5, 1, 0)
p3
(tab3 <- table(Predicted = p3, Actual = data$NCLEX.Outcome))
p3 <- predict(model, new.df, type = 'response')
p3
p3 <- ifelse(p3 > 0.5, 1, 0)
p3
round(predict(model, new.df, type="response"))
data <- read.csv(file = "D:/UMASSD/Nursing Department/data-analysis/data-selection-cleaning/data/NCLEX-selected-cleaned.csv" , header = T)
# Removing unncessory attributes
data$X <- NULL
#data$NCLEX.Outcome <- factor(data$NCLEX.Outcome)
#modelglm <- glm(NCLEX.Outcome ~ ., data, family = binomial)
model <- glm(NCLEX.Outcome ~ Gender + HESI.Score + Cum.GPA, data, family = binomial)
#model <- glm(NCLEX.Outcome ~ HESI.Score, data, family = binomial)
#model <- lm(is.NCLEX.Outcome.a ~ ., data)
#summary(model)
#new.df <- data.frame(HESI.Score=c(132))
new.df <- data.frame(age=23, Gender="F", Ethnicity="White", HESI.Score=499,
Date=2016, NCLEX.Outcome = "failed", Admitted.Major="Nursing BS", Cum.GPA=2.239)
#new.df <- data.frame(Gender="F", HESI.Score=699, Cum.GPA=2.239)
#new.df <- data.frame(HESI.Score=699)
#new.df <- data.frame(HESI.Score=c(699,599,499,399))
#predict(model, newdata = new.df, interval="confidence", level=.95)
predict(model, newdata = new.df)
round(predict(model, new.df, type="response"))
data <- read.csv(file = "D:/UMASSD/Nursing Department/data-analysis/data-selection-cleaning/data/NCLEX-selected-cleaned.csv" , header = T)
# Removing unncessory attributes
data$X <- NULL
#data$NCLEX.Outcome <- factor(data$NCLEX.Outcome)
#modelglm <- glm(NCLEX.Outcome ~ ., data, family = binomial)
model <- glm(NCLEX.Outcome ~ Gender + HESI.Score + Cum.GPA, data, family = binomial)
#model <- glm(NCLEX.Outcome ~ HESI.Score, data, family = binomial)
#model <- lm(is.NCLEX.Outcome.a ~ ., data)
#summary(model)
#new.df <- data.frame(HESI.Score=c(132))
new.df <- data.frame(age=23, Gender="F", Ethnicity="White", HESI.Score=499,
Date=2016, NCLEX.Outcome = "failed", Admitted.Major="Nursing BS", Cum.GPA=2.239)
predict(model, newdata = new.df)
round(predict(model, new.df, type="response"))
new.df <- data.frame(age=23, Gender="F", Ethnicity="White", HESI.Score=499,
Date=2016, NCLEX.Outcome = "failed", Admitted.Major="Nursing BS", Cum.GPA=3.239)
round(predict(model, new.df, type="response"))
predict(model, newdata = new.df)
new.df <- data.frame(age=23, Gender="F", Ethnicity="White", HESI.Score=599,
Date=2016, NCLEX.Outcome = "failed", Admitted.Major="Nursing BS", Cum.GPA=3.239)
predict(model, newdata = new.df)
round(predict(model, new.df, type="response"))
output <- round(predict(model, new.df, type="response"))
output
typeof(output)
runApp('D:/UMASSD/Nursing Department/data-analysis/Analysis/NCLEX')
runApp('D:/UMASSD/Nursing Department/data-analysis/Analysis/NCLEX')
model <- glm(NCLEX.Outcome ~ Gender + HESI.Score + Cum.GPA, data, family = binomial)
new.df <- data.frame(age=23, Gender="F", Ethnicity="White", HESI.Score=599,
Date=2016, NCLEX.Outcome = "failed", Admitted.Major="Nursing BS", Cum.GPA=3.239)
#
probabilities <- predict(model, newdata = new.df)
1 - mean(abs(probabilities - NCLEX.Outcome))
1 - mean(abs(probabilities - data$NCLEX.Outcome))
?glm
?predict
?glm
predict(model, newdata = new.df)
new.df <- data.frame(age=23, Gender="F", Ethnicity="White", HESI.Score=499,
Date=2016, NCLEX.Outcome = "failed", Admitted.Major="Nursing BS", Cum.GPA=3.239)
#new.df <- data.frame(Gender="F", HESI.Score=699, Cum.GPA=2.239)
#new.df <- data.frame(HESI.Score=699)
#new.df <- data.frame(HESI.Score=c(699,599,499,399))
#predict(model, newdata = new.df, interval="confidence", level=.95)
predict(model, newdata = new.df)
new.df <- data.frame(age=23, Gender="F", Ethnicity="White", HESI.Score=520,
Date=2016, NCLEX.Outcome = "failed", Admitted.Major="Nursing BS", Cum.GPA=3.239)
#new.df <- data.frame(Gender="F", HESI.Score=699, Cum.GPA=2.239)
#new.df <- data.frame(HESI.Score=699)
#new.df <- data.frame(HESI.Score=c(699,599,499,399))
#predict(model, newdata = new.df, interval="confidence", level=.95)
predict(model, newdata = new.df)
round(predict(model, new.df, type="response"))
?round
data <- read.csv(file="D:/UMASSD/Nursing Department/data-analysis/original-data/SAT Score - NCLEX Review with Admissions and Demographic data.csv", header = T)
data$X <- NULL
View(data)
View(data)
data$NCLEX.Outcome <- as.factor(data$NCLEX.Outcome)
data$Admitted.Major <- NULL
set.seed(123)
ind <-sample(2,nrow(data), replace = T, prob = c(0.7, 0.3))
train <- data[ind ==1,]
test <- data[ind ==2,]
lrmodal <- glm(NCLEX.Outcome ~ ., train, family = binomial)
data$Student.ID <- NULL
data$FirstName <- NULL
data$LastName <- NULL
data$Birthdate <- NULL
data$HESI_ID <- NULL
data$HESI.Exam <- NULL
data$Date <- NULL
data$X.1 <- NULL data$X.2<-NULL data$X.3<-NULL data$X.4<-NULL data$X.5<-NULL data$X.6<-NULL data$X.7<-NULL
data$X.1 <- NULL
data$X.2<-NULL
data$X.3<-NULL
data$X.4<-NULL
data$X.5<-NULL
data$X.6<-NULL
data$X.7<-NULL
data$NCLEX.Outcome <- as.factor(data$NCLEX.Outcome)
data$Admitted.Major <- NULL
set.seed(123)
ind <-sample(2,nrow(data), replace = T, prob = c(0.7, 0.3))
train <- data[ind ==1,]
test <- data[ind ==2,]
#linear Regression
lrmodal <- glm(NCLEX.Outcome ~ ., train, family = binomial)
lrmodal <- glm(NCLEX.Outcome ~ Gender, train, family = binomial)
lrmodal <- glm(NCLEX.Outcome ~ Gender+Ethinicity, train, family = binomial)
lrmodal <- glm(NCLEX.Outcome ~ Gender+Ethnicity, train, family = binomial)
lrmodal <- glm(NCLEX.Outcome ~ Gender+Ethnicity+HESI.Score, train, family = binomial)
lrmodal <- glm(NCLEX.Outcome ~ Gender+Ethnicity+HESI.Score+High.School.GPA, train, family = binomial)
lrmodal <- glm(NCLEX.Outcome ~ Gender+Ethnicity+HESI.Score+High.School.GPA+
High.School.Name, train, family = binomial)
lrmodal <- glm(NCLEX.Outcome ~ Gender+Ethnicity+HESI.Score+High.School.GPA+
SAT.Math, train, family = binomial)
lrmodal <- glm(NCLEX.Outcome ~ Gender+Ethnicity+HESI.Score+High.School.GPA+
SAT.Math+SAT.Verbal, train, family = binomial)
lrmodal <- glm(NCLEX.Outcome ~ Gender+Ethnicity+HESI.Score+High.School.GPA+
SAT.Math+SAT.Verbal+Total.SAT, train, family = binomial)
lrmodal <- glm(NCLEX.Outcome ~ Gender+Ethnicity+HESI.Score+High.School.GPA+
SAT.Math+SAT.Verbal+Total.SAT+Accuplacer.Algebra, train, family = binomial)
lrmodal <- glm(NCLEX.Outcome ~ Gender+Ethnicity+HESI.Score+High.School.GPA+
SAT.Math+SAT.Verbal+Total.SAT+Accuplacer.Algebra+Accuplacer.Calculus, train, family = binomial)
lrmodal <- glm(NCLEX.Outcome ~ Gender+Ethnicity+HESI.Score+High.School.GPA+
SAT.Math+SAT.Verbal+Total.SAT+Accuplacer.Algebra+Accuplacer.Calculuss, train, family = binomial)
lrmodal <- glm(NCLEX.Outcome ~ Gender+Ethnicity+HESI.Score+High.School.GPA+
SAT.Math+SAT.Verbal+Total.SAT+Accuplacer.Algebra+Accuplacer.Calculus+Cum.GPA, train, family = binomial)
lrmodal <- glm(NCLEX.Outcome ~ Gender+Ethnicity+HESI.Score+High.School.GPA+
SAT.Math+SAT.Verbal+Total.SAT+Accuplacer.Algebra+Accuplacer.Calculus+Major.GPA, train, family = binomial)
table(data$Cum.GPA)
lrmodal <- glm(NCLEX.Outcome ~ Gender+Ethnicity+HESI.Score+High.School.GPA+
SAT.Math+SAT.Verbal+Total.SAT+Accuplacer.Algebra+Accuplacer.Calculus, train, family = binomial)
p3 <- predict(lrmodal, train, type = 'response')
#head(p3)
p3 <- ifelse(p3 > 0.5, 1, 0)
(tab3 <- table(Predicted = p3, Actual = train$NCLEX.Outcome))
# Miss classification error
(1 - sum(diag(tab3))/sum(tab3)) * 100
#Accuracy
(sum(diag(tab3))/sum(tab3)) * 100
p3 <- predict(lrmodal, train, type = 'response')
lrmodal <- glm(NCLEX.Outcome ~ Ethnicity+HESI.Score+High.School.GPA+
SAT.Math+SAT.Verbal+Total.SAT+Accuplacer.Algebra+Accuplacer.Calculus, train, family = binomial)
p3 <- predict(lrmodal, train, type = 'response')
lrmodal <- glm(NCLEX.Outcome ~ HESI.Score+High.School.GPA+
SAT.Math+SAT.Verbal+Total.SAT+Accuplacer.Algebra+Accuplacer.Calculus, train, family = binomial)
p3 <- predict(lrmodal, train, type = 'response')
p3 <- ifelse(p3 > 0.5, 1, 0)
(tab3 <- table(Predicted = p3, Actual = train$NCLEX.Outcome))
(1 - sum(diag(tab3))/sum(tab3)) * 100
(sum(diag(tab3))/sum(tab3)) * 100
data <- read.csv(file="D:/UMASSD/Nursing Department/data-analysis/data-selection-cleaning/data/NCLEX-selected-cleaned.csvNCLEX-selected-cleaned.csv", header = T)
data <- read.csv(file="D:/UMASSD/Nursing Department/data-analysis/data-selection-cleaning/data/NCLEX-selected-cleaned.csv", header = T)
data$X <- NULL
data$NCLEX.Outcome <- as.factor(data$NCLEX.Outcome)
data$Admitted.Major <- NULL
set.seed(123)
ind <-sample(2,nrow(data), replace = T, prob = c(0.7, 0.3))
train <- data[ind ==1,]
test <- data[ind ==2,]
lrmodal = glm(NCLEX.Outcome ~., train, family = binomial)
p3 <- predict(lrmodal, train, type = 'response')
#head(p3)
p3 <- ifelse(p3 > 0.5, 1, 0)
(tab3 <- table(Predicted = p3, Actual = train$NCLEX.Outcome))
# Miss classification error
(1 - sum(diag(tab3))/sum(tab3)) * 100
#Accuracy
(sum(diag(tab3))/sum(tab3)) * 100
runApp('D:/UMASSD/Nursing Department/data-analysis/Analysis/NCLEX')
data <- read.csv(file="D:/UMASSD/Nursing Department/data-analysis/data-selection-cleaning/data/NCLEX-selected-cleaned.csv", header = T)
data$X <- NULL
data$NCLEX.Outcome <- as.factor(data$NCLEX.Outcome)
data$Admitted.Major <- NULL
set.seed(123)
ind <-sample(2,nrow(data), replace = T, prob = c(0.7, 0.3))
train <- data[ind ==1,]
test <- data[ind ==2,]
lrmodal = glm(NCLEX.Outcome ~., train, family = binomial)
p3 <- predict(lrmodal, train, type = 'response')
#head(p3)
p3 <- ifelse(p3 > 0.5, 1, 0)
(tab3 <- table(Predicted = p3, Actual = train$NCLEX.Outcome))
# Miss classification error
(1 - sum(diag(tab3))/sum(tab3)) * 100
#Accuracy
(sum(diag(tab3))/sum(tab3)) * 100
# Confusion matrix - test
p4 <- predict(lrmodal, test, type = 'response')
#head(p3)
p4 <- ifelse(p4 > 0.5, 1, 0)
(tab4 <- table(Predicted = p4, Actual = test$NCLEX.Outcome))
# Miss classification error
(1 - sum(diag(tab4))/sum(tab4)) * 100
#Accuracy
(sum(diag(tab4))/sum(tab4)) * 100
runApp('D:/UMASSD/Nursing Department/data-analysis/Analysis/NCLEX')
runApp('D:/UMASSD/Nursing Department/data-analysis/Analysis/NCLEX')
data <- read.csv(file = "D:/UMASSD/Nursing Department/data-analysis/data-selection-cleaning/data/NCLEX-selected-cleaned.csv" , header = T)
# Removing unncessory attributes
data$X <- NULL
#data$NCLEX.Outcome <- factor(data$NCLEX.Outcome)
#modelglm <- glm(NCLEX.Outcome ~ ., data, family = binomial)
model <- glm(NCLEX.Outcome ~ Gender + HESI.Score + Cum.GPA, data, family = binomial)
#model <- glm(NCLEX.Outcome ~ HESI.Score, data, family = binomial)
#model <- lm(is.NCLEX.Outcome.a ~ ., data)
#summary(model)
runApp('D:/UMASSD/Nursing Department/data-analysis/Analysis/NCLEX')
runApp('D:/UMASSD/Nursing Department/data-analysis/Analysis/NCLEX')
runApp('D:/UMASSD/Nursing Department/data-analysis/Analysis/NCLEX')
p4 <- predict(lrmodal, test, type = 'response')
runApp('D:/UMASSD/Nursing Department/data-analysis/Analysis/NCLEX')
shiny::runApp('D:/UMASSD/Nursing Department/data-analysis/Analysis/NCLEX')
View(data)
table(data$NCLEX.Outcome)
runApp('D:/UMASSD/Nursing Department/data-analysis/Analysis/NCLEX')
data <- read.csv(file="D:/UMASSD/Nursing Department/data-analysis/original-data/SAT Score - NCLEX Review with Admissions and Demographic data.csv", header = T)
data$X <- NULL
data$Student.ID <- NULL
data$FirstName <- NULL
data$LastName <- NULL
data$Birthdate <- NULL
data$HESI_ID <- NULL
data$HESI.Exam <- NULL
data$Date <- NULL
data$X.1 <- NULL
data$X.2<-NULL
data$X.3<-NULL
data$X.4<-NULL
data$X.5<-NULL
data$X.6<-NULL
data$X.7<-NULL
data$NCLEX.Outcome <- as.factor(data$NCLEX.Outcome)
data$Admitted.Major <- NULL
# Partition data - train 70%, test 30%
set.seed(123)
ind <-sample(2,nrow(data), replace = T, prob = c(0.7, 0.3))
train <- data[ind ==1,]
test <- data[ind ==2,]
lrmodal = glm(NCLEX.Outcome ~., train, family = binomial)
View(train)
View(data)
lrmodal = glm(NCLEX.Outcome ~ HESI.Score, train, family = binomial)
lrmodal = glm(NCLEX.Outcome ~ HESI.Score + Gender, train, family = binomial)
shiny::runApp('D:/UMASSD/Nursing Department/data-analysis/Analysis/NCLEX')
lrmodal = glm(NCLEX.Outcome ~ HESI.Score + Gender + Cum.GPA, train, family = binomial)
lrmodal = glm(NCLEX.Outcome ~ HESI.Score + Gender + Cum.GPA + High.School.GPA, train, family = binomial)
lrmodal = glm(NCLEX.Outcome ~ HESI.Score + Gender + Cum.GPA + High.School.GPA + SAT.Math, train, family = binomial)
summary(lrmodal)
lrmodal
describe(lrmodal)
summary(lrmodal)
lrmodal = glm(NCLEX.Outcome ~ HESI.Score + Gender + Cum.GPA + High.School.GPA + SAT.Math + SAT.Verabal, train, family = binomial)
lrmodal = glm(NCLEX.Outcome ~ HESI.Score + Gender + Cum.GPA + High.School.GPA + SAT.Math + SAT.Verbal, train, family = binomial)
lrmodal = glm(NCLEX.Outcome ~ HESI.Score + Gender + Cum.GPA + High.School.GPA + SAT.Math + SAT.Verbal + Total.SAT, train, family = binomial)
lrmodal = glm(NCLEX.Outcome ~ HESI.Score + Gender + Cum.GPA + High.School.GPA + SAT.Math + SAT.Verbal + Total.SAT + Accuplacer.Algerbra, train, family = binomial)
lrmodal = glm(NCLEX.Outcome ~ HESI.Score + Gender + Cum.GPA + High.School.GPA + SAT.Math + SAT.Verbal + Total.SAT + Accuplacer.Algebra, train, family = binomial)
lrmodal = glm(NCLEX.Outcome ~ HESI.Score + Gender + Cum.GPA + High.School.GPA + SAT.Math + SAT.Verbal + Total.SAT + Accuplacer.Algebra + Accuplacer.Calculus, train, family = binomial)
lrmodal = glm(NCLEX.Outcome ~ HESI.Score + Gender + Cum.GPA + High.School.GPA + SAT.Math +
SAT.Verbal + Total.SAT + Accuplacer.Algebra + Accuplacer.Calculus +
High.School.Name, train, family = binomial)
lrmodal = glm(NCLEX.Outcome ~ HESI.Score + Gender + Cum.GPA + High.School.GPA + SAT.Math +
SAT.Verbal + Total.SAT + Accuplacer.Algebra + Accuplacer.Calculus +
, train, family = binomial)
lrmodal = glm(NCLEX.Outcome ~ HESI.Score + Gender + Cum.GPA + High.School.GPA + SAT.Math +
SAT.Verbal + Total.SAT + Accuplacer.Algebra + Accuplacer.Calculus,
train, family = binomial)
p3 <- predict(lrmodal, train, type = 'response')
data <- read.csv(file="D:/UMASSD/Nursing Department/data-analysis/original-data/SAT Score - NCLEX Review with Admissions and Demographic data.csv", header = T)
data <- na.omit(data)
data <- read.csv(file="D:/UMASSD/Nursing Department/data-analysis/original-data/SAT Score - NCLEX Review with Admissions and Demographic data.csv", header = T)
library(tidyr)
data %>% drop_na()
View(data)
data <- read.csv(file="D:/UMASSD/Nursing Department/data-analysis/original-data/SAT Score - NCLEX Review with Admissions and Demographic data.csv", header = T)
data$X <- NULL
data$Student.ID <- NULL
data$FirstName <- NULL
data$LastName <- NULL
data$Birthdate <- NULL
data$HESI_ID <- NULL
data$HESI.Exam <- NULL
data$Date <- NULL
data$X.1 <- NULL
data$X.2<-NULL
data$X.3<-NULL
data$X.4<-NULL
data$X.5<-NULL
data$X.6<-NULL
data$X.7<-NULL
data$NCLEX.Outcome <- as.factor(data$NCLEX.Outcome)
data$Admitted.Major <- NULL
set.seed(123)
ind <-sample(2,nrow(data), replace = T, prob = c(0.7, 0.3))
train <- data[ind ==1,]
test <- data[ind ==2,]
#linear Regression
#lrmodal <- glm(NCLEX.Outcome ~ HESI.Score+High.School.GPA+
#                 SAT.Math+SAT.Verbal+Total.SAT+Accuplacer.Algebra+Accuplacer.Calculus, train, family = binomial)
#lrmodal = glm(NCLEX.Outcome ~., train, family = binomial)
lrmodal = glm(NCLEX.Outcome ~ HESI.Score + Gender + Cum.GPA + High.School.GPA + SAT.Math +
SAT.Verbal + Total.SAT + Accuplacer.Algebra + Accuplacer.Calculus,
train, family = binomial)
p3 <- predict(lrmodal, train, type = 'response')
p3 <- ifelse(p3 > 0.5, 1, 0)
(tab3 <- table(Predicted = p3, Actual = train$NCLEX.Outcome))
(1 - sum(diag(tab3))/sum(tab3)) * 100
(sum(diag(tab3))/sum(tab3)) * 100
43/52
sum(diag(tab3))
data$NCLEX.Outcome <- na.omit(data$NCLEX.Outcome)
data$NCLEX.Outcome <- as.factor(data$NCLEX.Outcome)
set.seed(123)
ind <-sample(2,nrow(data), replace = T, prob = c(0.7, 0.3))
train <- data[ind ==1,]
test <- data[ind ==2,]
lrmodal = glm(NCLEX.Outcome ~ HESI.Score + Gender + Cum.GPA + High.School.GPA + SAT.Math +
SAT.Verbal + Total.SAT + Accuplacer.Algebra + Accuplacer.Calculus,
train, family = binomial)
p3 <- predict(lrmodal, train, type = 'response')
p3 <- ifelse(p3 > 0.5, 1, 0)
(tab3 <- table(Predicted = p3, Actual = train$NCLEX.Outcome))
# Miss classification error
(1 - sum(diag(tab3))/sum(tab3)) * 100
#Accuracy
(sum(diag(tab3))/sum(tab3)) * 100
data$NCLEX.Outcome <- data[!apply(data$NCLEX.Outcome == "", 1, all),]
data$NCLEX.Outcome <- data$NCLEX.Outcome[!apply(data$NCLEX.Outcome == "", 1, all),]
data$NCLEX.Outcome <- data$NCLEX.Outcome[!apply(data$NCLEX.Outcome == ""),]
data$NCLEX.Outcome <- data$NCLEX.Outcome[!(data$NCLEX.Outcome == ""),]
shiny::runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
shiny::runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
library(rsconnect)
library(rsconnect)
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
exp(3.91237649214627e-06)
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
value <- 3.91237649214627e-06
if (value < 0){
hi
}
value <- 3.91237649214627e-06
if (value < 0){
hi <- 1
}
value <- 3.91237649214627e-06
hi <- 0
if (value < 0){
hi <- 1
}
hi
value <- 3.91237649214627e-06
hi <- 0
if (value <= 0){
hi <- 1
}
value <- 3.91237649214627e-06
hi <- 0
if (value > 0){
hi <- 1
}
value <- 3.91237649214627e-06
hi <- 0
if (value < 0.1){
hi <- 1
}
value <- 3.91237649214627e-06
hi <- 0
if (value < 0.1){
hi <- 1
}
hi
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
rsconnect::setAccountInfo(name='nclexprediction', token='DAAE69AB3904634508373B3A94A6E902', secret='wEbGBlT+/iI5tYwBPBHpUGfl93i56TmBZGwTrpnI')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application - deploy')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
rsconnect::setAccountInfo(name='nclex', token='B66E1E1E44594E0F1984FDAC22F2D9FE', secret='vEnH6tRbgZfcQwwCmYAnhtYhm0RzCM3rCOVCXr5b')
library(rsconnect)
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
shiny::runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
shiny::runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
runApp('D:/UMASSD/Nursing Department/data-analysis/Prediction_Application')
